// Generated by gencpp from file darknet_multiplexer_msgs/DarknetCameras.msg
// DO NOT EDIT!


#ifndef DARKNET_MULTIPLEXER_MSGS_MESSAGE_DARKNETCAMERAS_H
#define DARKNET_MULTIPLEXER_MSGS_MESSAGE_DARKNETCAMERAS_H

#include <ros/service_traits.h>


#include <darknet_multiplexer_msgs/DarknetCamerasRequest.h>
#include <darknet_multiplexer_msgs/DarknetCamerasResponse.h>


namespace darknet_multiplexer_msgs
{

struct DarknetCameras
{

typedef DarknetCamerasRequest Request;
typedef DarknetCamerasResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct DarknetCameras
} // namespace darknet_multiplexer_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::darknet_multiplexer_msgs::DarknetCameras > {
  static const char* value()
  {
    return "f6d950e5bb479bad2da2554e46987675";
  }

  static const char* value(const ::darknet_multiplexer_msgs::DarknetCameras&) { return value(); }
};

template<>
struct DataType< ::darknet_multiplexer_msgs::DarknetCameras > {
  static const char* value()
  {
    return "darknet_multiplexer_msgs/DarknetCameras";
  }

  static const char* value(const ::darknet_multiplexer_msgs::DarknetCameras&) { return value(); }
};


// service_traits::MD5Sum< ::darknet_multiplexer_msgs::DarknetCamerasRequest> should match
// service_traits::MD5Sum< ::darknet_multiplexer_msgs::DarknetCameras >
template<>
struct MD5Sum< ::darknet_multiplexer_msgs::DarknetCamerasRequest>
{
  static const char* value()
  {
    return MD5Sum< ::darknet_multiplexer_msgs::DarknetCameras >::value();
  }
  static const char* value(const ::darknet_multiplexer_msgs::DarknetCamerasRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::darknet_multiplexer_msgs::DarknetCamerasRequest> should match
// service_traits::DataType< ::darknet_multiplexer_msgs::DarknetCameras >
template<>
struct DataType< ::darknet_multiplexer_msgs::DarknetCamerasRequest>
{
  static const char* value()
  {
    return DataType< ::darknet_multiplexer_msgs::DarknetCameras >::value();
  }
  static const char* value(const ::darknet_multiplexer_msgs::DarknetCamerasRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::darknet_multiplexer_msgs::DarknetCamerasResponse> should match
// service_traits::MD5Sum< ::darknet_multiplexer_msgs::DarknetCameras >
template<>
struct MD5Sum< ::darknet_multiplexer_msgs::DarknetCamerasResponse>
{
  static const char* value()
  {
    return MD5Sum< ::darknet_multiplexer_msgs::DarknetCameras >::value();
  }
  static const char* value(const ::darknet_multiplexer_msgs::DarknetCamerasResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::darknet_multiplexer_msgs::DarknetCamerasResponse> should match
// service_traits::DataType< ::darknet_multiplexer_msgs::DarknetCameras >
template<>
struct DataType< ::darknet_multiplexer_msgs::DarknetCamerasResponse>
{
  static const char* value()
  {
    return DataType< ::darknet_multiplexer_msgs::DarknetCameras >::value();
  }
  static const char* value(const ::darknet_multiplexer_msgs::DarknetCamerasResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DARKNET_MULTIPLEXER_MSGS_MESSAGE_DARKNETCAMERAS_H
